# Launch bash in existing containers

docker exec -it kafka-docker_kafka_1 bash
docker exec -it 01a30c7c546b_kafka-docker_zookeeper_1 bash

# Open logs for existing containers

docker logs -f kafka-docker_kafka_1
docker logs -f kafka-docker_producer_1
docker logs -f kafka-docker_consumer_1

# Create topics from inside the container

${KAFKA_HOME}/bin/kafka-topics.sh --create --zookeeper ${KAFKA_ZOOKEEPER_CONNECT} --replication-factor 1 --partitions 1 --topic log
${KAFKA_HOME}/bin/kafka-topics.sh --create --zookeeper ${KAFKA_ZOOKEEPER_CONNECT} --replication-factor 1 --partitions 1 --topic verify

# Launch separate kafka container and start consumer in it

docker run --rm -v /var/run/docker.sock:/var/run/docker.sock --network=kafka-docker_sb -e HOST_IP=localhost -e BS=kafka:9092 -i -t --name kafka-docker-verify-consumer wurstmeister/kafka /bin/bash
$KAFKA_HOME/bin/kafka-console-consumer.sh --bootstrap-server=$BS --topic=verify

# Attach to running container

docker attach kafka-docker_kafka_1
docker attach kafka-docker_producer_1
docker attach kafka-docker_consumer_1

# Compose commands
docker-compose up -d
docker-compose stop
docker-compose rm
docker-compose up -d --build