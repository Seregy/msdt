version: '2'

networks:
  sb:
    driver: bridge

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - sb

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_CREATE_TOPICS: "purchase:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - sb

  command-consumer:
    build:
      context: cqrs-command-consumer
    ports:
      - "8090:8090"
    environment:
      spring.kafka.bootstrap-servers: kafka:9092
      spring.h2.console.settings.web-allow-others: "true"
    networks:
      - sb

  cqrs-command-rest:
    build:
      context: cqrs-command-rest
    ports:
      - "8190:8190"
    environment:
      spring.kafka.bootstrap-servers: kafka:9092
    networks:
      - sb

  cqrs-command-rest-client:
    depends_on:
      - cqrs-command-rest
    build:
      context: cqrs-command-rest-client
    ports:
      - "8290:8290"
    environment:
      - REST_URL=cqrs-command-rest:8190
    networks:
      - sb

  cqrs-query-rest:
    build:
      context: cqrs-command-rest
    ports:
      - "8390:8390"
    networks:
      - sb